function [w,en,yn] = LMS(xn,dn,mu,M)
%LMS实现程序
%   输入：
% xn   输入信号       列向量
% dn   理想信号       列向量
% mu   收敛常数       标量
% itr  迭代次数       标量
% M    滤波器的阶数   标量
%   输出：
% w    滤波器的系数矩阵    大小为M×itr  每一列代表一次迭代后的系数
% en   误差信号           大小为itr×1  每一行代表一次迭代后产生的误差
% yn   滤波器的输出信号    列向量


itr = length(xn); %使得迭代次数为输入信号xn的长度

w = zeros(M,itr);%将滤波器的初始值设置为0
en = zeros(itr,1);%将初始误差设置为0

%迭代更新滤波器的参数
for k = M:itr    %要保证输入延时后的信号有效，所以实际的迭代次数只有（itr-M）次，
    x = xn(k:-1:k-M+1);%将输入信号延迟，使得滤波器的每个抽头都有输入
    y = w(:,k-1).'*x;  %计算出滤波器的输出
    en(k) = dn(k)-y;   %得出误差信号
    w(:,k) = w(:,k-1)+mu*en(k)*x;%迭代更新滤波器的系数
end
    

%滤波器参数固定后，得出经过优化滤波器滤波后的输出信号
yn = 0*ones(1,length(xn));%inf意为无穷大，将yn的初始值置为无穷大，绘制图像的时候将无法显示

for k = M:itr
    x = xn(k:-1:k-M+1);
    yn(k) = w(:,k).'*x;
end
    
end


